plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}
apply plugin: 'kotlin'
apply plugin: 'application'
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.springframework/spring-core
    compile group: 'org.springframework', name: 'spring-core', version: '5.2.6.RELEASE'
// https://mvnrepository.com/artifact/org.springframework/spring-context
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.6.RELEASE'
// https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.30.v20200611'
// https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlet
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.30.v20200611'
// https://mvnrepository.com/artifact/org.freemarker/freemarker
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.23'

    // https://mvnrepository.com/artifact/postgresql/postgresql
    compile group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'

}
jar {
    manifest {
        attributes 'Main-Class': 'com.arko.StartServerKt'

    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}


task runJar(type: JavaExec) {

    main = "-jar";
    args jar.archivePath
}
task setup(dependsOn: 'runJar'){

    dependsOn("clean")
    dependsOn("build")

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
